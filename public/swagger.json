{
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "description": "API documentation for User Management",
    "version": "1.0"
  },
  "paths": {
    "/auth": {
      "post": {
        "summary": "Authenticate user and obtain JWT token",
        "description": "Accepts email and password and returns a JWT token if the credentials are valid.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" },
              "example": {
                "email": "ds@example.com",
                "password": "securePass123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token generated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2I5YTZlZmJlZTlhNzE5YTdiZGIxNWIiLCJlbWFpbCI6ImRzQGV4YW1wbGUuY29tIiwiaWF0IjoxNzQwMjIxMjY2LCJleHAiOjE3NDAyMjEzMjZ9.gjjZsCgB1PpFne9vQP3Zy6qbJcgJVBWkfBn8UucXdNg"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Invalid email or password",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieves a list of all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                },
                "example": [
                  {
                    "_id": "67b98cfb1a73f83c73eebab2",
                    "name": "haseeb",
                    "email": "sas@example.com",
                    "password": "securePass123",
                    "roles": "BO",
                    "__v": 0
                  },
                  {
                    "_id": "67b990868c811c71c47e5a17",
                    "name": "haseesdfb",
                    "email": "d@example.com",
                    "password": "securePass123",
                    "roles": "BO",
                    "__v": 0
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user with the provided details. No token is required for this endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "description": "Retrieves the details of a user by their unique ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          { "$ref": "#/components/parameters/UserId" }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "put": {
        "summary": "Update an existing user",
        "description": "Updates user details for the given user ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          { "$ref": "#/components/parameters/UserId" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Deletes the user with the specified ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          { "$ref": "#/components/parameters/UserId" }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "ds@example.com" },
          "password": { "type": "string", "example": "securePass123" }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Habeeb" },
          "email": { "type": "string", "example": "habeeb@example.com" },
          "password": { "type": "string", "example": "securePass123" },
          "roles": { "type": "string", "example": "BO" }
        },
        "required": ["name", "email", "password", "roles"]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "example": "67b97bd0462c072ad4aa689d" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "roles": { "type": "string" },
          "__v": { "type": "integer" }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User with ID 67b97bd0462c072ad4aa689d deleted successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "integer", "example": 400 },
          "message": { "type": "string", "example": "Invalid request" }
        }
      }
    },
    "parameters": {
      "UserId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "example": "67b97bd0462c072ad4aa689d" },
        "description": "The unique ID of the user"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid ID format",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "NotFound": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      }
    }
  }
}
